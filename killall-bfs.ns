const restricted_servers = ["home", "darkweb"]

/**
 * @param {NS} ns
 * @param {String} host
 * @param {Number} depth
 * @return {String[]}
 */
export function BFS(ns, host, depth) {
	var servers = ns.scan(host, true);
	for (var i = 1; i < depth; i++) {
		var newServers = [];
		for (var j = 0; j < servers.length; j++) {
			var scanned = ns.scan(servers[j], true);
			for (var k = 0; k < scanned.length; k++) {
				newServers.push(scanned[k]);
			}
		}
		for (var j = 0; j < newServers.length; j++) {
			var server = newServers[j];
			if (!restricted_servers.includes(server) && !servers.includes(server)) {
				servers.push(server);
			}
		}
	}
	return servers;
}

/** @param {NS} ns **/
export async function main(ns) {
	// Get the node BFS depth
	if (ns.args.length == 0) {
		var depth = 1;
	} else {
		var depth = ns.args[0];
	}
    let servers = BFS(ns, ns.getHostname(), depth);
	for (let i = 0; i < servers.length; i++) {
		ns.killall(servers[i]);
	}
}